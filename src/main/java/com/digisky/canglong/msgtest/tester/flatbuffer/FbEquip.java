// automatically generated by the FlatBuffers compiler, do not modify

package com.digisky.canglong.msgtest.tester.flatbuffer;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class FbEquip extends Table {
    public static FbEquip getRootAsFbEquip(ByteBuffer _bb) {
        return getRootAsFbEquip(_bb, new FbEquip());
    }
    
    public static FbEquip getRootAsFbEquip(ByteBuffer _bb, FbEquip obj) {
        _bb.order(ByteOrder.LITTLE_ENDIAN);
        return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb));
    }
    
    public void __init(int _i, ByteBuffer _bb) {
        bb_pos = _i;
        bb = _bb;
    }
    
    public FbEquip __assign(int _i, ByteBuffer _bb) {
        __init(_i, _bb);
        return this;
    }
    
    public long id() {
        int o = __offset(4);
        return o != 0 ? bb.getLong(o + bb_pos) : 0L;
    }
    
    public int lv() {
        int o = __offset(6);
        return o != 0 ? bb.getInt(o + bb_pos) : 0;
    }
    
    public int quality() {
        int o = __offset(8);
        return o != 0 ? bb.getInt(o + bb_pos) : 0;
    }
    
    public int star() {
        int o = __offset(10);
        return o != 0 ? bb.getInt(o + bb_pos) : 0;
    }
    
    public int atts(int j) {
        int o = __offset(12);
        return o != 0 ? bb.getInt(__vector(o) + j * 4) : 0;
    }
    
    public int attsLength() {
        int o = __offset(12);
        return o != 0 ? __vector_len(o) : 0;
    }
    
    public ByteBuffer attsAsByteBuffer() {
        return __vector_as_bytebuffer(12, 4);
    }
    
    public ByteBuffer attsInByteBuffer(ByteBuffer _bb) {
        return __vector_in_bytebuffer(_bb, 12, 4);
    }

  public static int createFbEquip(FlatBufferBuilder builder,
      long id,
      int lv,
      int quality,
      int star,
      int attsOffset) {
    builder.startObject(5);
    FbEquip.addId(builder, id);
    FbEquip.addAtts(builder, attsOffset);
    FbEquip.addStar(builder, star);
    FbEquip.addQuality(builder, quality);
    FbEquip.addLv(builder, lv);
    return FbEquip.endFbEquip(builder);
  }

  public static void startFbEquip(FlatBufferBuilder builder) { builder.startObject(5); }
  public static void addId(FlatBufferBuilder builder, long id) { builder.addLong(0, id, 0L); }
  public static void addLv(FlatBufferBuilder builder, int lv) { builder.addInt(1, lv, 0); }
  public static void addQuality(FlatBufferBuilder builder, int quality) { builder.addInt(2, quality, 0); }
  public static void addStar(FlatBufferBuilder builder, int star) { builder.addInt(3, star, 0); }
  public static void addAtts(FlatBufferBuilder builder, int attsOffset) { builder.addOffset(4, attsOffset, 0); }
  public static int createAttsVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addInt(data[i]); return builder.endVector(); }
  public static void startAttsVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static int endFbEquip(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

